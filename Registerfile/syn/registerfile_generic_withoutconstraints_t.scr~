##############################################################
#SCRIPT FOR SPEEDING UP and RECORDING the MULTIPLIER SYNTHESIS#
# analyzing and checking vhdl netlist#
# here the analyze command is used for each file from bottom to top #
##############################################################
analyze -library WORK -format vhdl {constants.vhd}
analyze -library WORK -format vhdl {registerfile_generic.vhd}##############################################################
# elaborating the top entity -- here supposed BOOTHMUL#
# choose the architecture you want
elaborate registerfile_generic -architecture A 
##########################################
# first compilation, without constraints #
compile 
# reporting riming and power after the first synthesis without constraints #
report_timing > registerfile_generic_time_withoutconstraints.rpt
report_area > registerfile_generic_twithoutconstraints.rpt
# forces a combinational max delay of REQUIRED_TIME from each of the inputs
# to each of th eoutput, that is a delay lower than the one found after
# the first compilation step #
# often this is the working clock period of your system #
#set_max_delay 0.6 -from [all_inputs] -to [all_outputs]
# optimize
#compile -map_effort high
# save report
#report_timing > registerfile_generic_timeopt_2t.rpt
#report_area > registerfile_generic_timeopt_2a.rpt
# saving files
#write -hierarchy -format ddc -output registerfile_generic-A-topt.ddc
#write -hierarchy -format vhdl -output registerfile_generic-A-topt.vhdl
#write -hierarchy -format verilog -output registerfile_generic-A-topt.v
